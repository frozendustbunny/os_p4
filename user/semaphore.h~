
#ifndef SEMAPHORE_H
#define SEMAPHORE_H

struct semaphore {
	struct mutex sema_mutex;	// general protection lock
	struct condvar sema_condvar;	// Waiters
	int sema_waiters;	// Number of waiters
	int sema_value;		// Semaphore value

//	uint sem_count;		// semaphore count
//	uint sem_type;		// semaphore type
//	uint sem_magic;		// semaphore magic

};

void sem_init(struct semaphore* sem, int initval);
void sem_post(struct semaphore* sem);
void sem_wait(struct semaphore* sem);

#endif


/* taken from solaris
typedef struct {
// this structure must be the same as sema_t in <synch.h> 
uint32_t    sem_count;  /* semaphore count 
uint16_t    sem_type;
uint16_t    sem_magic;
upad64_t    sem_pad1[3];    /* reserved for a mutex_t 
upad64_t    sem_pad2[2];    /* reserved for a cond_t
} sem_t;
*/
